# -*- coding: utf-8 -*-
"""lab09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DNkZE1BOA4yAheMwz90QZcnEtp838_2K
"""

from sklearn.datasets import load_iris
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import Perceptron
import pickle
from sklearn.neural_network import MLPClassifier
import numpy as np

iris = load_iris(as_frame=True)
pd.concat([iris.data, iris.target], axis = 1).plot.scatter(
    x='petal length (cm)', y='petal width (cm)', c='target',
    colormap='viridis', figsize=(10,4)
)

#1

biasy = []
dokladnosc = []

iris = load_iris()
for i in range(3):
    X = iris.data[:, (2, 3)] #petal length, petal width
    y = (iris.target == i).astype(int)
    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.2, random_state=42)
    per_clf = Perceptron()
    per_clf.fit(X_train, y_train)
    [w_0] = per_clf.intercept_
    [[w_1,w_2]]= per_clf.coef_
    biasy.append((w_0,w_1,w_2))
    dokladnosc.append((per_clf.score(X_train, y_train), per_clf.score(X_test, y_test)))
    
print(biasy)
print(dokladnosc)

with open("per_acc.pkl", "wb") as f:
    pickle.dump(dokladnosc, f)

with open("per_wght.pkl", "wb") as f:
    pickle.dump(biasy, f)

#2
X_xor = np.array( [[0, 0], [0, 1], [1, 0], [1, 1]])
y_xor = np.array([0, 1, 1, 0])

mlp_xor = MLPClassifier(hidden_layer_sizes =(2,), 
                        activation= 'logistic', solver = 'lbfgs', max_iter = 100)

mlp_xor.fit(X_xor, y_xor)
mlp_xor.predict(X_xor)

with open('mlp_xor.pkl', 'wb') as f: 
    pickle.dump(mlp_xor, f)

mlp_xor_fixed = MLPClassifier(solver = "lbfgs")

mlp_xor_fixed.coefs_ = [[1, -1, -1, 1], [1, 1]]
mlp_xor_fixed.intercepts_ = [-1, -1]

mlp_xor_fixed.fit(X_xor, y_xor)

with open('mlp_xor_fixed.pkl', 'wb') as f: 
    pickle.dump(mlp_xor_fixed, f)

